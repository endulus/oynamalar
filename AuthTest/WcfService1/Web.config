<?xml version="1.0"?>
<configuration>

  <system.web>
    <compilation debug="true" targetFramework="4.0" />
  </system.web>
  <system.serviceModel>

    
    <bindings>
      
      <customBinding>
        <binding name="httpx" receiveTimeout="00:10:00" sendTimeout="00:10:00">
          <security authenticationMode="UserNameOverTransport" allowInsecureTransport="true" />
          <textMessageEncoding />
          <httpTransport />
        </binding>
      </customBinding>
      
      <wsHttpBinding>
        <binding name="CustomBinding_ILogicService">
          <security mode="TransportWithMessageCredential">
            <transport clientCredentialType="None" />
            <message clientCredentialType="UserName" establishSecurityContext="false" />
          </security>
        </binding>
      </wsHttpBinding>
      
    </bindings>

    <client>
      <endpoint address="http://localhost:37687/LogicService.svc" binding="customBinding"
        bindingConfiguration="httpx" contract="ServiceReference1.ILogicService"
        name="CustomBinding_ILogicService" />
    </client>
    
    
    <services>
      <service behaviorConfiguration="aaa" name="AuthService.TestService">
        <endpoint address="" binding="customBinding" bindingConfiguration="httpx"
          contract="AuthService.ITestService" />
      </service>
      <service behaviorConfiguration="aaa" name="AuthService.LogicService">
        <endpoint address="" binding="customBinding" bindingConfiguration="httpx"
          contract="AuthService.ILogicService" />
      </service>
      <service behaviorConfiguration="aaa" name="AuthService.TokenService">
        <endpoint address="" binding="wsHttpBinding"
          contract="AuthService.ITokenService" />
      </service>

      
      
        <service behaviorConfiguration="CoreModel" name="AuthService.CoreModel.AuthService">
        <endpoint address="" binding="customBinding" bindingConfiguration="httpx"
          contract="AuthService.CoreModel.IAuthService" />
      </service>

      <service behaviorConfiguration="CoreModel" name="AuthService.CoreModel.TransferService">
        <endpoint address="" binding="customBinding" bindingConfiguration="httpx"
          contract="AuthService.CoreModel.ITransferService" />
      </service>


    </services>
    <standardEndpoints>
      <webHttpEndpoint>
        <standardEndpoint name="aa" />
      </webHttpEndpoint>
    </standardEndpoints>
    <!--<protocolMapping>
      <add scheme="http" binding="wsHttpBinding"/>
    </protocolMapping>-->
    <behaviors>
      <serviceBehaviors>
        
        <behavior name="aaa">
          <serviceSecurityAudit auditLogLocation="Application" suppressAuditFailure="true"
            serviceAuthorizationAuditLevel="Failure" messageAuthenticationAuditLevel="Failure" />
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="Custom"
              customUserNamePasswordValidatorType="AuthService.UsernameValidator, AuthService" />
          </serviceCredentials>
        </behavior>

        <behavior name="CoreModel">
          <serviceSecurityAudit auditLogLocation="Application" suppressAuditFailure="true"
            serviceAuthorizationAuditLevel="Failure" messageAuthenticationAuditLevel="Failure" />
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="Custom"
              customUserNamePasswordValidatorType="Common.UsernameValidator, Common" />
          </serviceCredentials>
        </behavior>



        <behavior name="">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" aspNetCompatibilityEnabled="true" />
  </system.serviceModel>
 <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
  </system.webServer>
  
</configuration>
